[
    {
        "id": 1,
        "code_pattern": "SELECT .* FROM .* WHERE .*'.*'.*",
        "language": "python",
        "label": "SQL Injection",
        "solution": "Use parameterized queries to prevent SQL injection."
    },
    {
        "id": 2,
        "code_pattern": ".*<.*>.*{.*}.*</.*>.*",
        "language": "python",
        "label": "XSS",
        "solution": "Escape user input before including it in HTML output."
    },
    {
        "id": 3,
        "code_pattern": "include\\(.*\\$_GET\\[.*\\].*\\);",
        "language": "php",
        "label": "File Inclusion",
        "solution": "Use a whitelist of allowed files and validate inputs."
    },
    {
        "id": 4,
        "code_pattern": "eval\\(.*\\$_GET\\[.*\\].*\\);",
        "language": "php",
        "label": "Remote Code Execution",
        "solution": "Avoid using eval with user input. Consider alternatives or sanitize the input."
    },
    {
        "id": 5,
        "code_pattern": "<form .*method=['\"]POST['\"]>.*</form>",
        "language": "php",
        "label": "Cross-Site Request Forgery (CSRF)",
        "solution": "Include a CSRF token in forms and verify it on the server side."
    },
    {
        "id": 6,
        "code_pattern": "user_id = .*request.args.get\\('user_id'\\)|\\$_GET\\['user_id'\\]",
        "language": "python|php",
        "label": "Insecure Direct Object References (IDOR)",
        "solution": "Implement proper access controls to ensure that the user has permission to access the data."
    },
    {
        "id": 7,
        "code_pattern": "session\\['user_id'\\] = .*|session_start\\(\\);.*\\$_SESSION\\['user_id'\\]",
        "language": "python|php",
        "label": "Broken Authentication and Session Management",
        "solution": "Implement secure session management, enforce secure cookie flags, and ensure session IDs are regenerated and invalidated appropriately."
    },
    {
        "id": 8,
        "code_pattern": "DEBUG = True|ini_set\\('display_errors', 1\\);",
        "language": "python|php",
        "label": "Security Misconfiguration",
        "solution": "Disable debug mode in production, remove default accounts, and apply proper security headers."
    },
    {
        "id": 9,
        "code_pattern": "password = .*|\\$_POST\\['password'\\] = .*",
        "language": "python|php",
        "label": "Sensitive Data Exposure",
        "solution": "Encrypt sensitive data and use secure storage for encryption keys."
    },
    {
        "id": 10,
        "code_pattern": "if .*user\\.role == 'admin'|if .*\\$user->role == 'admin'",
        "language": "python|php",
        "label": "Broken Access Control",
        "solution": "Implement and enforce strict access controls based on user roles and permissions."
    },
    {
        "id": 11,
        "code_pattern": "redirect_url = request.args.get\\('url'\\)|\\$redirect_url = \\$_GET\\['url'\\];",
        "language": "python|php",
        "label": "Unvalidated Redirects and Forwards",
        "solution": "Validate and whitelist redirect URLs."
    },
    {
        "id": 12,
        "code_pattern": "parser = etree\\.XMLParser\\(\\)|libxml_disable_entity_loader\\(false\\)",
        "language": "python|php",
        "label": "XML External Entities (XXE)",
        "solution": "Disable external entity resolution in XML parsing by setting the appropriate configurations."
    },
    {
        "id": 13,
        "code_pattern": "pickle\\.loads\\(.*\\)|unserialize\\(.*\\)",
        "language": "python|php",
        "label": "Insecure Deserialization",
        "solution": "Avoid deserializing untrusted data or use safer formats like JSON."
    },
    {
        "id": 14,
        "code_pattern": "os\\.system\\(.*\\)|shell_exec\\(.*\\)",
        "language": "python|php",
        "label": "Command Injection",
        "solution": "Use subprocess.run() in Python and escapeshellarg() in PHP to prevent command injection."
    },
    {
        "id": 15,
        "code_pattern": "file\\.save\\(.*\\)|move_uploaded_file\\(.*\\)",
        "language": "python|php",
        "label": "File Upload Vulnerabilities",
        "solution": "Validate file types and implement secure file storage with appropriate validation checks."
    },
    {
        "id": 16,
        "code_pattern": "filename = request.args.get\\('file'\\)|\\$filename = \\$_GET\\['file'\\];",
        "language": "python|php",
        "label": "Local File Inclusion (LFI)",
        "solution": "Validate and restrict file paths to ensure only allowed files are included."
    },
    {
        "id": 17,
        "code_pattern": "exec\\(open\\(url\\)\\.read\\(\\)\\)|include\\(\\$_GET\\['url'\\]\\);",
        "language": "python|php",
        "label": "Remote File Inclusion (RFI)",
        "solution": "Avoid using user input for file paths or URLs; whitelist allowed sources."
    },
    {
        "id": 18,
        "code_pattern": "open\\(\"/var/www/\".*\\+.*\\$_GET\\['file'\\]\\)|open\\(\"/var/www/\".*\\+.*user_input\\)",
        "language": "python|php",
        "label": "Directory Traversal",
        "solution": "Sanitize file paths and restrict to a safe directory."
    },
    {
        "id": 19,
        "code_pattern": "age = request.args.get\\('age'\\)|\\$_GET\\['age'\\]",
        "language": "python|php",
        "label": "Improper Input Validation",
        "solution": "Validate and sanitize all inputs to prevent improper input handling."
    },
    {
        "id": 20,
        "code_pattern": "password = input\\(.*\\)|\\$_POST\\['password'\\]",
        "language": "python|php",
        "label": "Weak Password Policies",
        "solution": "Enforce strong password policies, use password hashing, and require complex passwords."
    }
]
